#include <assert.h>
#include <ctype.h>
#include <limits.h>
#include <math.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char* readline();
char* isValid(char* s) {
    int cnt[26]={0};
    int l=strlen(s);
    for(int m=0;m<l;m++){
        cnt[s[m]-'a']++;
    }
    int f[l],fsize=0;
    for(int m=0;m<26;m++){
        if(cnt[m]>0){
            f[fsize++]=cnt[m];
        }
    }
    int mini=f[0],maxi=f[0];
    for(int m=1;m<fsize;m++){
        if(f[m]<mini)mini=f[m];
        if(f[m]>maxi)maxi=f[m];
    }
    int min_cnt=0,max_cnt=0;
    for(int m=0;m<fsize;m++){
        if(f[m]==mini)min_cnt++;
        if(f[m]==maxi)max_cnt++;
    }
    if(mini==maxi){
        return "YES";
    }
    if(mini == 1 && min_cnt == 1 && max_cnt+min_cnt==fsize){
        return "YES";
    }
    if(maxi-mini==1 && max_cnt==1 && min_cnt+max_cnt==fsize){
        return "YES";
    }
    return "NO";
}   
int main()
{
    FILE* fptr = fopen(getenv("OUTPUT_PATH"), "w");

    char* s = readline();

    char* result = isValid(s);

    fprintf(fptr, "%s\n", result);

    fclose(fptr);

    return 0;
}

char* readline() {
    size_t alloc_length = 1024;
    size_t data_length = 0;

    char* data = malloc(alloc_length);

    while (true) {
        char* cursor = data + data_length;
        char* line = fgets(cursor, alloc_length - data_length, stdin);

        if (!line) {
            break;
        }

        data_length += strlen(cursor);

        if (data_length < alloc_length - 1 || data[data_length - 1] == '\n') {
            break;
        }

        alloc_length <<= 1;

        data = realloc(data, alloc_length);

        if (!data) {
            data = '\0';

            break;
        }
    }

    if (data[data_length - 1] == '\n') {
        data[data_length - 1] = '\0';

        data = realloc(data, data_length);

        if (!data) {
            data = '\0';
        }
    } else {
        data = realloc(data, data_length + 1);

        if (!data) {
            data = '\0';
        } else {
            data[data_length] = '\0';
        }
    }

    return data;
}

